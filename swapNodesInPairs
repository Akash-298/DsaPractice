/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @return {ListNode}
 */
var swapPairs = function(head) {
    var current = head, prev= null,temp,node1,node2,workAround;
    while(current) {
        if(!current.next) {
            break;
        }
        temp = current.next.next; // temp : 3 => 4
        node1 = current; // node1: 1 => 2 => 3 => 4
        node2 = current.next; // node2: 2 => 3 => 4

        node1.next = temp;//  1 => 3 => 4
        node2.next = node1; // node2: 2 => 1 => 3 => 4
        if(prev) {
            prev.next = node2;
        }
        if(!prev) {
            workAround = node2;
        }
        prev = node1;
        current = temp; // jumping by two
    }
    if(workAround) {
        workAround.next = head;
    } else {
         workAround = head;
    }
   
    return workAround;
};
